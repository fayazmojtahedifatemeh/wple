@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Plus+Jakarta+Sans:wght@600;700;800&family=JetBrains+Mono:wght@400;500;600;700&display=swap');

@import "tailwindcss";

/* LIGHT MODE */
:root {
  --button-outline: rgba(0, 0, 0, .10);
  --badge-outline: rgba(0, 0, 0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8;
  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0, 0, 0, .03);
  --elevate-2: rgba(0, 0, 0, .08);

  --background: 240 10% 98%;

  --foreground: 240 8% 12%;

  --border: 240 8% 90%;

  --card: 0 0% 100%;

  --card-foreground: 240 8% 12%;

  --card-border: 240 6% 95%;

  --sidebar: 240 8% 96%;

  --sidebar-foreground: 240 8% 12%;

  --sidebar-border: 240 6% 92%;

  --sidebar-primary: 280 80% 65%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 240 8% 94%;

  --sidebar-accent-foreground: 240 8% 12%;

  --sidebar-ring: 280 80% 65%;

  --popover: 240 6% 97%;

  --popover-foreground: 240 8% 12%;

  --popover-border: 240 6% 93%;

  --primary: 280 80% 60%;

  --primary-foreground: 0 0% 100%;

  --secondary: 240 6% 94%;

  --secondary-foreground: 240 8% 12%;

  --muted: 240 8% 95%;

  --muted-foreground: 240 5% 45%;

  --accent: 240 10% 93%;

  --accent-foreground: 240 8% 12%;

  --destructive: 0 72% 55%;

  --destructive-foreground: 0 0% 100%;

  --input: 240 8% 85%;
  --ring: 280 80% 65%;
  --chart-1: 280 80% 65%;
  --chart-2: 320 70% 60%;
  --chart-3: 220 85% 70%;
  --chart-4: 142 76% 45%;
  --chart-5: 0 72% 55%;

  --gradient-start: 280 80% 65%;
  --gradient-middle: 320 70% 60%;
  --gradient-end: 220 85% 70%;

  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  --font-display: 'Plus Jakarta Sans', 'Inter', sans-serif;
  --font-mono: 'JetBrains Mono', 'Menlo', monospace;
  --radius: 1rem;
  --shadow-2xs: 0px 1px 2px 0px hsl(240 8% 12% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(240 8% 12% / 0.08);
  --shadow-sm: 0px 2px 4px -1px hsl(240 8% 12% / 0.06), 0px 1px 2px -1px hsl(240 8% 12% / 0.04);
  --shadow: 0px 4px 6px -1px hsl(240 8% 12% / 0.08), 0px 2px 4px -1px hsl(240 8% 12% / 0.04);
  --shadow-md: 0px 6px 12px -2px hsl(240 8% 12% / 0.10), 0px 3px 6px -2px hsl(240 8% 12% / 0.05);
  --shadow-lg: 0px 10px 20px -4px hsl(240 8% 12% / 0.12), 0px 4px 8px -2px hsl(240 8% 12% / 0.06);
  --shadow-xl: 0px 20px 32px -8px hsl(240 8% 12% / 0.14), 0px 8px 16px -4px hsl(240 8% 12% / 0.08);
  --shadow-2xl: 0px 32px 64px -12px hsl(240 8% 12% / 0.18);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Glass effect variables */
  --glass-bg: hsl(0 0% 100% / 0.8);
  --glass-border: hsl(240 8% 12% / 0.1);
  --glass-blur: 24px;
  
  /* Enhanced glass effects */
  --glass-bg-strong: hsl(0 0% 100% / 0.9);
  --glass-bg-weak: hsl(0 0% 100% / 0.6);
  --glass-border-strong: hsl(240 8% 12% / 0.15);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255, 255, 255, .10);
  --badge-outline: rgba(255, 255, 255, .05);

  --opaque-button-border-intensity: 9;
  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255, 255, 255, .04);
  --elevate-2: rgba(255, 255, 255, .09);

  --background: 240 8% 8%;

  --foreground: 0 0% 98%;

  --border: 240 8% 18%;

  --card: 240 8% 12%;

  --card-foreground: 0 0% 98%;

  --card-border: 240 8% 16%;

  --sidebar: 240 8% 10%;

  --sidebar-foreground: 0 0% 98%;

  --sidebar-border: 240 8% 14%;

  --sidebar-primary: 280 80% 60%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 240 8% 14%;

  --sidebar-accent-foreground: 0 0% 98%;

  --sidebar-ring: 280 80% 60%;

  --popover: 240 8% 14%;

  --popover-foreground: 0 0% 98%;

  --popover-border: 240 8% 18%;

  --primary: 280 80% 60%;

  --primary-foreground: 0 0% 100%;

  --secondary: 240 6% 16%;

  --secondary-foreground: 0 0% 98%;

  --muted: 240 6% 15%;

  --muted-foreground: 0 0% 70%;

  --accent: 240 8% 16%;

  --accent-foreground: 0 0% 98%;

  --destructive: 0 72% 55%;

  --destructive-foreground: 0 0% 100%;

  --input: 240 8% 24%;
  --ring: 280 80% 60%;
  --chart-1: 280 80% 65%;
  --chart-2: 320 70% 60%;
  --chart-3: 220 85% 70%;
  --chart-4: 142 76% 55%;
  --chart-5: 0 72% 60%;

  --gradient-start: 280 80% 60%;
  --gradient-middle: 320 70% 55%;
  --gradient-end: 220 85% 65%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.20);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.30);
  --shadow-sm: 0px 2px 4px -1px hsl(0 0% 0% / 0.25), 0px 1px 2px -1px hsl(0 0% 0% / 0.15);
  --shadow: 0px 4px 6px -1px hsl(0 0% 0% / 0.30), 0px 2px 4px -1px hsl(0 0% 0% / 0.20);
  --shadow-md: 0px 6px 12px -2px hsl(0 0% 0% / 0.35), 0px 3px 6px -2px hsl(0 0% 0% / 0.25);
  --shadow-lg: 0px 10px 20px -4px hsl(0 0% 0% / 0.40), 0px 4px 8px -2px hsl(0 0% 0% / 0.30);
  --shadow-xl: 0px 20px 32px -8px hsl(0 0% 0% / 0.45), 0px 8px 16px -4px hsl(0 0% 0% / 0.35);
  --shadow-2xl: 0px 32px 64px -12px hsl(0 0% 0% / 0.50);

  /* Glass effect variables */
  --glass-bg: hsl(240 8% 12% / 0.6);
  --glass-border: hsl(0 0% 100% / 0.1);
  --glass-blur: 24px;
  
  /* Enhanced glass effects */
  --glass-bg-strong: hsl(240 8% 12% / 0.8);
  --glass-bg-weak: hsl(240 8% 12% / 0.4);
  --glass-border-strong: hsl(0 0% 100% / 0.15);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    /* No global border styles needed here */
    border-width: 0;
    box-sizing: border-box;
  }

  body {
    /* Keep only basic smoothing */
    @apply antialiased;
    /* Background, text color, and base font-sans applied in index.html */
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    /* FIX: Remove @apply font-display */
    /* Apply the font family directly using the CSS variable */
    font-family: var(--font-display);
  }
}

@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: -1;
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: 999;
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Glassmorphism utilities */
  .glass {
    background: var(--glass-bg);
    backdrop-filter: blur(var(--glass-blur)) saturate(180%);
    border: 1px solid var(--glass-border);
  }

  .gradient-text {
    background: linear-gradient(135deg, hsl(var(--gradient-start)), hsl(var(--gradient-middle)), hsl(var(--gradient-end)));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .gradient-bg {
    background: linear-gradient(135deg, hsl(var(--gradient-start)), hsl(var(--gradient-middle)), hsl(var(--gradient-end)));
  }

  /* Animated gradient backgrounds */
  .gradient-bg-animated {
    background: linear-gradient(-45deg, hsl(var(--gradient-start)), hsl(var(--gradient-middle)), hsl(var(--gradient-end)), hsl(var(--gradient-start)));
    background-size: 400% 400%;
    animation: gradient-shift 8s ease infinite;
  }

  .gradient-bg-subtle {
    background: linear-gradient(135deg, hsl(var(--gradient-start) / 0.1), hsl(var(--gradient-middle) / 0.1), hsl(var(--gradient-end) / 0.1));
  }

  /* Enhanced glass effects */
  .glass-strong {
    background: var(--glass-bg-strong);
    backdrop-filter: blur(var(--glass-blur)) saturate(180%);
    border: 1px solid var(--glass-border-strong);
  }

  .glass-weak {
    background: var(--glass-bg-weak);
    backdrop-filter: blur(calc(var(--glass-blur) / 2)) saturate(120%);
    border: 1px solid var(--glass-border);
  }

  /* Floating elements */
  .floating {
    transform: translateY(0);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .floating:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-xl);
  }

  /* Glowing buttons */
  .glow-button {
    position: relative;
    overflow: hidden;
  }

  .glow-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
  }

  .glow-button:hover::before {
    left: 100%;
  }

  /* Interactive glowing effect */
  .glow-interactive {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
    transition: box-shadow 0.3s ease;
  }

  .glow-interactive:hover {
    box-shadow: 0 0 30px hsl(var(--primary) / 0.5), 0 0 60px hsl(var(--primary) / 0.2);
  }

  /* Refined scrollbars */
  .scrollbar-refined::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  .scrollbar-refined::-webkit-scrollbar-track {
    background: transparent;
  }

  .scrollbar-refined::-webkit-scrollbar-thumb {
    background: hsl(var(--muted-foreground) / 0.3);
    border-radius: 4px;
    transition: background 0.2s ease;
  }

  .scrollbar-refined::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--muted-foreground) / 0.5);
  }

  /* Smooth animations */
  .animate-fade-in {
    animation: fade-in 0.5s ease-out;
  }

  .animate-slide-up {
    animation: slide-up 0.3s ease-out;
  }

  .animate-scale-in {
    animation: scale-in 0.2s ease-out;
  }

  /* Keyframes */
  @keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slide-up {
    from { 
      opacity: 0;
      transform: translateY(20px);
    }
    to { 
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scale-in {
    from { 
      opacity: 0;
      transform: scale(0.95);
    }
    to { 
      opacity: 1;
      transform: scale(1);
    }
  }

  .font-display {
    font-family: var(--font-display);
  }

  .font-mono {
    font-family: var(--font-mono);
  }
}